simter-file:
  base-data-dir: target/data
  authorization:
    deny-message: "Permission denied on %1$s %2$s"
    # Default module access-control, mostly for admin permission.
    # See tech.simter.file.impl.ModuleConfiguration.defaultModuleAuthorizer(...) bean.
    # If without simter-file.authorization.modules config, fallback to use this.
    default:
      name: "super"
      defaultPermission: "Deny"   # Allow|Deny
      operations:
        READ.roles: ["ADMIN"]
        CREATE.roles: ["ADMIN"]
        UPDATE.roles: ["ADMIN"]
        DELETE.roles: ["ADMIN"]
    # All business modules access-control.
    # See tech.simter.file.impl.ModuleConfiguration.moduleAuthorizers(...) bean.
    # If without this config, fallback to use the upper default config.
    modules:
      # a sample for a business module-a access-control.
      # see tech.simter.reactive.security.properties.ModuleAuthorizeProperties
      module-a:
        name: "module-a"
        defaultPermission: "Allow"   # Allow|Deny, default Deny
        operations:
          READ:
            roles: ["X_READ1", "X_READ2"]  # actual role identity
            strategy: "Or"                 # And|Or, default Or
          CREATE:
            roles: "X_CREATE"
            strategy: "And"
          UPDATE:
            roles: "X_UPDATE"
            strategy: "And"
          DELETE.roles: "X_DELETE"
      #module-b: ...
spring.main.banner-mode: 'off'
logging:
  file.name: target/test.log
  level: # TRACE < DEBUG < INFO < WARN < ERROR < FATAL < OFF
    root: ERROR
    tech.simter.file: WARN
